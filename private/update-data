#!/usr/bin/env python3

# Copyright Â© 2016-2017 Jakub Wilk <jwilk@jwilk.net>
# SPDX-License-Identifier: MIT

import os
import ssl
import urllib.request

import lxml.html

cafile = '/usr/share/ca-certificates/mozilla/Certum_Trusted_Network_CA.crt'
url = 'https://stat.gov.pl/obszary-tematyczne/ceny-handel/wskazniki-cen/wskazniki-cen-towarow-i-uslug-konsumpcyjnych-pot-inflacja-/roczne-wskazniki-cen-towarow-i-uslug-konsumpcyjnych/'
here = os.path.dirname(__file__)
path = '{here}/../data'.format(here=here)

def main():
    tls_context = None
    if os.path.exists(cafile):
        tls_context = ssl.create_default_context(cafile=cafile)
    with urllib.request.urlopen(url, context=tls_context) as fp:
        doc = lxml.html.parse(fp)
    [table] = doc.findall('//table[@class="tabelka-standard"]')
    data = {}
    for value_td in table.findall('.//td'):
        [year_td] = value_td.xpath('./preceding-sibling::th[1]')
        year = int(year_td.text)
        value = value_td.text
        if value == '\xA0':
            continue
        value = float(value.replace(',', '.')) / 100
        data[year] = value
    with open(path, 'wt', encoding='ASCII') as file:
        for year, value in sorted(data.items()):
            print('{y:4}\t{v:.3f}'.format(y=year, v=value), file=file)

if __name__ == '__main__':
    main()

# vim:ts=4 sts=4 sw=4 et
